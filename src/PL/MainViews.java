/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PL;

import BLL.ClientsControls.ServerHandler;
import BLL.MyHyperLinkControls;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import static java.awt.PageAttributes.MediaType.C;
import static java.awt.SystemColor.text;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Path;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.table.TableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.text.html.HTMLDocument;
import static org.eclipse.persistence.expressions.ExpressionOperator.trim;

/**
 *
 * @author Admin
 */
public class MainViews extends javax.swing.JFrame {

    /**
     * Creates new form FriendListViews
     */
    public static Socket socket;
    public static DataInputStream in;
    static DataOutputStream out;
    public static String username = "";
    //public static LoginViews lg;
    public static Thread t;
    static ServerHandler sv;

    public MainViews(Socket socket, String username) throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.socket = socket;
        this.username = username;
        sv = new ServerHandler(socket, userOnline, username, txtnote);
        PanelDisplay.setSelectedIndex(0);
        t = new Thread(sv);
        t.start();
        out = new DataOutputStream(socket.getOutputStream());
        out.writeUTF("is_admin");
        out.writeUTF(username);
        out.writeUTF("user_online");
        out.writeUTF("handle_request2");
        out.writeUTF(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choseFile = new javax.swing.JFileChooser();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        setting = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        admin = new javax.swing.JLabel();
        PanelDisplay = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtfindname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userOnline = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtnote = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listFriend = new javax.swing.JList<>();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        userSend = new javax.swing.JLabel();
        addFriendBTN = new javax.swing.JButton();
        blockBTN = new javax.swing.JButton();
        txtmessagesend = new javax.swing.JTextField();
        sendMessage = new javax.swing.JButton();
        sendFile = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        displayMessage = new javax.swing.JTextPane();
        PanelSticker = new javax.swing.JPanel();
        sticker1 = new javax.swing.JLabel();
        sticker2 = new javax.swing.JLabel();
        sticker3 = new javax.swing.JLabel();
        sticker4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listGroup = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        nameofgroup = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        displayMessageGroup = new javax.swing.JTextPane();
        txtmessgroup = new javax.swing.JTextField();
        sendGroup = new javax.swing.JButton();
        sendFileGroup = new javax.swing.JButton();
        PanelSticker1 = new javax.swing.JPanel();
        stickerGroup1 = new javax.swing.JLabel();
        stickerGroup2 = new javax.swing.JLabel();
        stickerGroup3 = new javax.swing.JLabel();
        stickerGroup4 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        listBan = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(254, 184, 122));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-chat-35.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        setting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        setting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-setting-35.png"))); // NOI18N
        setting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingMouseClicked(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-home-35.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-group-35.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-log-out-35.png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        admin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-admin-35.png"))); // NOI18N
        admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(setting, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(admin, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setting, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(admin, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 649));

        PanelDisplay.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(248, 248, 248));
        jPanel1.setPreferredSize(new java.awt.Dimension(1051, 646));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ChatApp creative logo.Creative Chat Logo .png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(jLabel5)
                .addContainerGap(343, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel5)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        PanelDisplay.addTab("tab1", jPanel1);

        jPanel3.setPreferredSize(new java.awt.Dimension(1051, 646));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(1051, 646));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 183, 113));

        jPanel6.setBackground(new java.awt.Color(240, 164, 83));

        txtfindname.setBackground(new java.awt.Color(240, 164, 83));
        txtfindname.setBorder(null);
        txtfindname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfindnameActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-search-35.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(txtfindname, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtfindname)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        userOnline.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        userOnline.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        userOnline.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        userOnline.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        userOnline.setMaximumSize(new java.awt.Dimension(123, 275));
        userOnline.setPreferredSize(new java.awt.Dimension(123, 275));
        userOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userOnlineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userOnline);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Online User");

        jLabel9.setText("Thông báo");

        txtnote.setEditable(false);
        txtnote.setColumns(20);
        txtnote.setRows(5);
        txtnote.setMaximumSize(new java.awt.Dimension(124, 275));
        txtnote.setMinimumSize(null);
        txtnote.setPreferredSize(new java.awt.Dimension(124, 275));
        jScrollPane4.setViewportView(txtnote);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("FriendList");

        listFriend.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        listFriend.setMinimumSize(new java.awt.Dimension(127, 275));
        listFriend.setPreferredSize(new java.awt.Dimension(127, 275));
        listFriend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listFriendMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listFriend);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 16, -1, 610));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(660, 614));

        jPanel9.setBackground(new java.awt.Color(255, 204, 153));
        jPanel9.setMaximumSize(new java.awt.Dimension(617, 81));
        jPanel9.setMinimumSize(new java.awt.Dimension(617, 81));

        userSend.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userSend.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userSend.setText("None");

        addFriendBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-button-48.png"))); // NOI18N
        addFriendBTN.setBorder(null);
        addFriendBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFriendBTNActionPerformed(evt);
            }
        });

        blockBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-block-48.png"))); // NOI18N
        blockBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userSend, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addFriendBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blockBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(blockBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFriendBTN))
                .addGap(0, 13, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        sendMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-send-30.png"))); // NOI18N
        sendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageActionPerformed(evt);
            }
        });

        sendFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-send-file-30.png"))); // NOI18N
        sendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-user-80 (1).png"))); // NOI18N
        jLabel10.setToolTipText("");

        displayMessage.setEditable(false);
        displayMessage.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jScrollPane5.setViewportView(displayMessage);

        PanelSticker.setBackground(new java.awt.Color(255, 255, 255));

        sticker1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sticker1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-trash-dove-32.png"))); // NOI18N
        sticker1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sticker1MouseClicked(evt);
            }
        });

        sticker2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sticker2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-horns-headband-35.png"))); // NOI18N
        sticker2.setPreferredSize(new java.awt.Dimension(32, 32));
        sticker2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sticker2MouseClicked(evt);
            }
        });

        sticker3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sticker3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-toy-robot-32.png"))); // NOI18N
        sticker3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sticker3MouseClicked(evt);
            }
        });

        sticker4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sticker4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-pool-duck-32.png"))); // NOI18N
        sticker4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sticker4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelStickerLayout = new javax.swing.GroupLayout(PanelSticker);
        PanelSticker.setLayout(PanelStickerLayout);
        PanelStickerLayout.setHorizontalGroup(
            PanelStickerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelStickerLayout.createSequentialGroup()
                .addComponent(sticker1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sticker2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sticker3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sticker4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelStickerLayout.setVerticalGroup(
            PanelStickerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelStickerLayout.createSequentialGroup()
                .addGroup(PanelStickerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sticker1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(sticker2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sticker3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sticker4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtmessagesend, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sendFile, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PanelSticker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(61, 61, 61))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelSticker, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmessagesend, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendFile, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 660, 600));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1115, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PanelDisplay.addTab("tab2", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(255, 183, 113));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Group Chat Hiện Có");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listGroup.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        listGroup.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Group1", "Group2" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listGroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listGroupMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listGroup);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-64.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(245, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(255, 171, 70));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-group-100.png"))); // NOI18N

        nameofgroup.setText("NAME OF GROUP");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-block-48.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-leave-48.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameofgroup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(nameofgroup))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        displayMessageGroup.setEditable(false);
        jScrollPane6.setViewportView(displayMessageGroup);

        sendGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-send-30.png"))); // NOI18N
        sendGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendGroupActionPerformed(evt);
            }
        });

        sendFileGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-send-file-30.png"))); // NOI18N
        sendFileGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileGroupActionPerformed(evt);
            }
        });

        PanelSticker1.setBackground(new java.awt.Color(255, 255, 255));

        stickerGroup1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stickerGroup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-trash-dove-32.png"))); // NOI18N
        stickerGroup1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stickerGroup1MouseClicked(evt);
            }
        });

        stickerGroup2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stickerGroup2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-horns-headband-35.png"))); // NOI18N
        stickerGroup2.setPreferredSize(new java.awt.Dimension(32, 32));
        stickerGroup2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stickerGroup2MouseClicked(evt);
            }
        });

        stickerGroup3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stickerGroup3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-toy-robot-32.png"))); // NOI18N
        stickerGroup3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stickerGroup3MouseClicked(evt);
            }
        });

        stickerGroup4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stickerGroup4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-pool-duck-32.png"))); // NOI18N
        stickerGroup4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stickerGroup4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelSticker1Layout = new javax.swing.GroupLayout(PanelSticker1);
        PanelSticker1.setLayout(PanelSticker1Layout);
        PanelSticker1Layout.setHorizontalGroup(
            PanelSticker1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSticker1Layout.createSequentialGroup()
                .addComponent(stickerGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stickerGroup2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stickerGroup3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stickerGroup4)
                .addGap(0, 326, Short.MAX_VALUE))
        );
        PanelSticker1Layout.setVerticalGroup(
            PanelSticker1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSticker1Layout.createSequentialGroup()
                .addGroup(PanelSticker1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stickerGroup1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(stickerGroup2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stickerGroup3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stickerGroup4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelSticker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(txtmessgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(sendGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sendFileGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(PanelSticker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sendGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmessgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendFileGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        PanelDisplay.addTab("tab3", jPanel4);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setMinimumSize(new java.awt.Dimension(1051, 646));
        jPanel14.setPreferredSize(new java.awt.Dimension(1051, 646));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel13.setText("Danh Sách Bị Chặn");
        jLabel13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        listBan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Ngày Sinh", "Giới Tính "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listBan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listBanMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(listBan);
        if (listBan.getColumnModel().getColumnCount() > 0) {
            listBan.getColumnModel().getColumn(0).setResizable(false);
            listBan.getColumnModel().getColumn(1).setResizable(false);
            listBan.getColumnModel().getColumn(2).setResizable(false);
            listBan.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 1115, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
        );

        PanelDisplay.addTab("tab4", jPanel13);

        getContentPane().add(PanelDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, -31, -1, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Call form chat 1 - 1
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        PanelDisplay.setSelectedIndex(1);
        displayMessage.setText("");
        userSend.setText("None");
    }//GEN-LAST:event_jLabel1MouseClicked

//Call form main
    public static String currentChatWith = "";
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        PanelDisplay.setSelectedIndex(0);
        currentChatWith = "";
    }//GEN-LAST:event_jLabel3MouseClicked
//Display user can chat with 
    private void userOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userOnlineMouseClicked
        try {
            out = new DataOutputStream(socket.getOutputStream());
            in = new DataInputStream(socket.getInputStream());
            if (!userSend.getText().equals(userOnline.getSelectedValue())) {
                displayMessage.setText(null);
                out.writeUTF("check_block_or_not");
                out.writeUTF(userOnline.getSelectedValue());
                out.writeUTF(username);
                currentChatWith = userOnline.getSelectedValue();
            }
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_userOnlineMouseClicked

    private void txtfindnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfindnameActionPerformed
        if (txtfindname.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill the text box to find user");
            return;
        }
        try {
            DisplayUserView du = new DisplayUserView(txtfindname.getText());
            du.setVisible(true);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtfindnameActionPerformed

    private void sendMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageActionPerformed
        try {
            if (txtmessagesend.getText().equals(null)) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tin nhắn cần gửi");
                return;
            } else if (userSend.getText().equals("None")) {
                JOptionPane.showMessageDialog(this, "Chọn người cần gửi");
                return;
            }
            out = new DataOutputStream(socket.getOutputStream());
            String choice = "send_message";
            String curdate = getCurdate();
            out.writeUTF(choice);
            out.writeUTF(userSend.getText());
            out.writeUTF(txtmessagesend.getText());
            out.writeUTF(username);
            out.writeUTF(curdate);
            out.flush();
            displayMessage(curdate, txtmessagesend.getText());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_sendMessageActionPerformed
    public String getCurdate() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        LocalDateTime date = LocalDateTime.now();
        String curdate = date.format(formatter);
        return curdate;
    }
    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        int ask = JOptionPane.showConfirmDialog(this, "Do you want log out ?");
        if (ask == 0) {
            String opt = "user_out";
            try {
                out = new DataOutputStream(socket.getOutputStream());
                out.writeUTF(opt);
                out.writeUTF(username);
                this.dispose();
            } catch (IOException ex) {
                Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_logoutMouseClicked
    public static int accept = -1;
    private void addFriendBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFriendBTNActionPerformed
        try {
            if (currentChatWith.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một người dùng online để thêm bạn");
                return;
            }
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF("check_friend");
            out.writeUTF(username);
            out.writeUTF(currentChatWith);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addFriendBTNActionPerformed
    public void displayMessage(String curdate, String msg) throws BadLocationException, IOException {
        displayMessage.setContentType("text/html");
        HTMLDocument display = (HTMLDocument) displayMessage.getDocument();
        String s = "You: " + msg + "<br>" + curdate + "<br>";
        display.insertAfterEnd(display.getCharacterElement(display.getLength()), s);
        displayMessage.setForeground(Color.black);
    }

    public void displayMessageGroup(String curdate, String msg) throws BadLocationException, IOException {
        displayMessageGroup.setContentType("text/html");
        HTMLDocument display = (HTMLDocument) displayMessageGroup.getDocument();
        String s = "You: " + msg + "<br>" + curdate + "<br>";
        display.insertAfterEnd(display.getCharacterElement(display.getLength()), s);
        displayMessageGroup.setForeground(Color.black);
    }
    private void sendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileActionPerformed

        String act = "send_file";
        try {
            if (currentChatWith.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một người dùng online gửi FILE");
                return;
            }
            int bytes = 0;
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF(act);
            choseFile.setDialogTitle("Chọn File");
            choseFile.showOpenDialog(this);
            String path = choseFile.getSelectedFile().toPath().toString();
            String nameOfFile = choseFile.getSelectedFile().getName();
            File file = new File(path);
            FileInputStream fileRead = new FileInputStream(file);
            String curdate = getCurdate();
            out.writeUTF(userSend.getText());
            out.writeLong(file.length());
            out.writeUTF(nameOfFile);
            out.writeUTF(curdate);
            out.writeUTF(username);
            byte[] sendFile = new byte[4 * 1024];
            while ((bytes = fileRead.read(sendFile)) != -1) {
                out.write(sendFile, 0, bytes);
                out.flush();
            }
            Path filechose = choseFile.getSelectedFile().toPath();
            URL urlfile = filechose.toUri().toURL();
            displayMessage.setContentType("text/html");
            String msg = "You: " + "<a href='" + urlfile + "'>" + nameOfFile + "</a>" + "<br>" + curdate + "<br>";
            HTMLDocument doc = (HTMLDocument) displayMessage.getDocument();
            doc.insertAfterEnd(doc.getCharacterElement(doc.getLength()), msg);
            displayMessage.addHyperlinkListener(new MyHyperLinkControls());
            fileRead.close();
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendFileActionPerformed

    int setVis = 0;
    private void sticker1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sticker1MouseClicked
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic";
        String userSd = username;
        String userRecei = userSend.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-trash-dove-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(userRecei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessage.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessage.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sticker1MouseClicked

    private void sticker2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sticker2MouseClicked
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic";
        String userSd = username;
        String userRecei = userSend.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-horns-headband-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(userRecei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessage.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessage.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sticker2MouseClicked

    private void sticker3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sticker3MouseClicked
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic";
        String userSd = username;
        String userRecei = userSend.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-toy-robot-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(userRecei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessage.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessage.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sticker3MouseClicked

    private void sticker4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sticker4MouseClicked
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic";
        String userSd = username;
        String userRecei = userSend.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-pool-duck-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(userRecei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessage.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessage.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sticker4MouseClicked
    //Group Chat
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        try {
            out = new DataOutputStream(socket.getOutputStream());
            PanelDisplay.setSelectedIndex(2);
            out.writeUTF("display_group");
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void stickerGroup1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stickerGroup1MouseClicked
        // TODO add your handling code here:
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic_group";
        String userSd = username;
        String groupRei = nameofgroup.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-trash-dove-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(groupRei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessageGroup.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessageGroup.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stickerGroup1MouseClicked

    private void stickerGroup2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stickerGroup2MouseClicked
        // TODO add your handling code here:
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic_group";
        String userSd = username;
        String groupRei = nameofgroup.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-horns-headband-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(groupRei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessageGroup.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessageGroup.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stickerGroup2MouseClicked

    private void stickerGroup3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stickerGroup3MouseClicked
        // TODO add your handling code here:
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic_group";
        String userSd = username;
        String groupRei = nameofgroup.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-toy-robot-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(groupRei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessageGroup.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessageGroup.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stickerGroup3MouseClicked

    private void stickerGroup4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stickerGroup4MouseClicked
        // TODO add your handling code here:
        try {
            out = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        String act = "send_pic_group";
        String userSd = username;
        String groupRei = nameofgroup.getText();
        String filePath = "C:/Users/Admin/Desktop/ChatApp/ChatApplication/src/Image/icons8-pool-duck-96.png";
        String curdate = getCurdate();
        try {
            out.writeUTF(act);
            out.writeUTF(userSd);
            out.writeUTF(groupRei);
            out.writeUTF(filePath);
            out.writeUTF(curdate);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayMessageGroup.setContentType("text/html");
        StyledDocument doc = (StyledDocument) displayMessageGroup.getDocument();
        Style style = doc.addStyle("Image", null);
        StyleConstants.setIcon(style, new ImageIcon(filePath));
        try {
            doc.insertString(doc.getLength(), "You: ", null);
            doc.insertString(doc.getLength(), "Image", style);
            doc.insertString(doc.getLength(), "\n", null);
            doc.insertString(doc.getLength(), curdate, null);
            doc.insertString(doc.getLength(), "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stickerGroup4MouseClicked
//Tao group
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CreateGroupViews cr;
        try {
            cr = new CreateGroupViews(socket, username);
            cr.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void blockBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBTNActionPerformed
        try {
            String act = "block_user";
            String block = userSend.getText();
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF(act);
            out.writeUTF(username);
            out.writeUTF(block);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_blockBTNActionPerformed

    private void listFriendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFriendMouseClicked
        // TODO add your handling code here:
        try {
            out = new DataOutputStream(socket.getOutputStream());
            in = new DataInputStream(socket.getInputStream());
            if (!userSend.getText().equals(currentChatWith)) {
                out.writeUTF("check_block_or_not");
                out.writeUTF(listFriend.getSelectedValue());
                out.writeUTF(username);
                currentChatWith = listFriend.getSelectedValue();
            }
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listFriendMouseClicked

    private void listGroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listGroupMouseClicked
        try {
            displayMessageGroup.setText(null);
            out = new DataOutputStream(socket.getOutputStream());
            String groupName = listGroup.getSelectedValue();
            out.writeUTF("join_group_or_not");
            out.writeUTF(groupName);
            out.writeUTF(username);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listGroupMouseClicked

    private void sendGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendGroupActionPerformed
        // TODO add your handling code here:
        try {
            out = new DataOutputStream(socket.getOutputStream());
            if (txtmessgroup.getText().equals(null)) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tin nhắn cần gửi");
                return;
            } else if (nameofgroup.getText().equals("NAME OF GROUP")) {
                JOptionPane.showMessageDialog(this, "Hãy gia nhập một nhóm để gửi tin nhắn");
                return;
            }
            String curdate = getCurdate();
            out.writeUTF("send_message_group");
            out.writeUTF(nameofgroup.getText());
            out.writeUTF(txtmessgroup.getText());
            out.writeUTF(username);
            out.writeUTF(curdate);
            out.flush();
            displayMessageGroup(curdate, txtmessgroup.getText());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendGroupActionPerformed

    private void sendFileGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileGroupActionPerformed
        // TODO add your handling code here:
        String act = "send_file_group";
        try {
            if (currentChatWith.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhóm để gửi FILE");
                return;
            }
            int bytes = 0;
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF(act);
            choseFile.setDialogTitle("Chọn File");
            choseFile.showOpenDialog(this);
            String path = choseFile.getSelectedFile().toPath().toString();
            String nameOfFile = choseFile.getSelectedFile().getName();
            File file = new File(path);
            FileInputStream fileRead = new FileInputStream(file);
            String curdate = getCurdate();
            out.writeUTF(nameofgroup.getText());
            out.writeLong(file.length());
            out.writeUTF(nameOfFile);
            out.writeUTF(curdate);
            out.writeUTF(username);
            byte[] sendFile = new byte[4 * 1024];
            while ((bytes = fileRead.read(sendFile)) != -1) {
                out.write(sendFile, 0, bytes);
                out.flush();
            }
            Path filechose = choseFile.getSelectedFile().toPath();
            URL urlfile = filechose.toUri().toURL();
            displayMessageGroup.setContentType("text/html");
            String msg = "You: " + "<a href='" + urlfile + "'>" + nameOfFile + "</a>" + "<br>" + curdate + "<br>";
            HTMLDocument doc = (HTMLDocument) displayMessageGroup.getDocument();
            doc.insertAfterEnd(doc.getCharacterElement(doc.getLength()), msg);
            displayMessageGroup.addHyperlinkListener(new MyHyperLinkControls());
            fileRead.close();
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadLocationException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendFileGroupActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            if (nameofgroup.getText().equals("NAME OF GROUP")) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn nhóm để thoát");
            }
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF("leave_group");
            out.writeUTF(nameofgroup.getText());
            out.writeUTF(username);
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            if (nameofgroup.getText().equals("NAME OF GROUP")) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn nhóm để chặn");
            }
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF("block_group");
            out.writeUTF(username);
            out.writeUTF(nameofgroup.getText());
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void settingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingMouseClicked
        // TODO add your handling code here:
        ChangePasswordViews cpv = new ChangePasswordViews(username, socket);
        cpv.setVisible(true);
    }//GEN-LAST:event_settingMouseClicked

    private void adminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminMouseClicked
        // TODO add your handling code here:
        PanelDisplay.setSelectedIndex(3);
        try {
            out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF("list_user_ban");
        } catch (IOException ex) {
            Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_adminMouseClicked

    private void listBanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listBanMouseClicked
        // TODO add your handling code here:
        int userChose = listBan.getSelectedRow();
        TableModel getUserChoseBan = listBan.getModel();
        String userUnBan = (String) getUserChoseBan.getValueAt(userChose, 0);
        int quest = JOptionPane.showConfirmDialog(null, "Bạn có muốn bỏ án phạt cho " + userUnBan + " không ?");
        if (quest == 0) {
            try {
                out = new DataOutputStream(socket.getOutputStream());
                out.writeUTF("unban");
                out.writeUTF(userUnBan);
            } catch (IOException ex) {
                Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_listBanMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainViews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Creat e and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainViews(socket, username).setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainViews.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTabbedPane PanelDisplay;
    private javax.swing.JPanel PanelSticker;
    private javax.swing.JPanel PanelSticker1;
    private javax.swing.JButton addFriendBTN;
    public static javax.swing.JLabel admin;
    private javax.swing.JButton blockBTN;
    private javax.swing.JFileChooser choseFile;
    public static javax.swing.JTextPane displayMessage;
    public static javax.swing.JTextPane displayMessageGroup;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    public static javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable listBan;
    public static javax.swing.JList<String> listFriend;
    public static javax.swing.JList<String> listGroup;
    private javax.swing.JLabel logout;
    public static javax.swing.JLabel nameofgroup;
    private javax.swing.JButton sendFile;
    private javax.swing.JButton sendFileGroup;
    private javax.swing.JButton sendGroup;
    private javax.swing.JButton sendMessage;
    public static javax.swing.JLabel setting;
    private javax.swing.JLabel sticker1;
    private javax.swing.JLabel sticker2;
    private javax.swing.JLabel sticker3;
    private javax.swing.JLabel sticker4;
    private javax.swing.JLabel stickerGroup1;
    private javax.swing.JLabel stickerGroup2;
    private javax.swing.JLabel stickerGroup3;
    private javax.swing.JLabel stickerGroup4;
    private javax.swing.JTextField txtfindname;
    public static javax.swing.JTextField txtmessagesend;
    private javax.swing.JTextField txtmessgroup;
    public static javax.swing.JTextArea txtnote;
    public static javax.swing.JList<String> userOnline;
    public static javax.swing.JLabel userSend;
    // End of variables declaration//GEN-END:variables
}
